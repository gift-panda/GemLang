import gem.RuntimeError;

func instanceOf(instance, clazz){
    if(type(clazz) == nil){
        throw IllegalArgumentError("A class must be passed in arg 2.");
    }
    if(type(clazz)[1:5] != "class"){
        throw IllegalArgumentError("A class must be passed in arg 2.");
    }
    if(type(instance) == nil){
        throw IllegalArgumentError("A instance must be passed in arg 1.");
    }
    if(type(instance)[1:4] != "inst"){
        throw IllegalArgumentError("A instance must be passed in arg 1.");
    }

    var superClazz = nil;
    if(instance.getClass() == clazz){
        return true;
    }
    else if((superClazz = instance.getClass().getSuper()) != nil){
        return isChildOf(instance.getClass(), clazz);
    }
    else
        return false;
}

func isChildOf(child, parent){
    if(child == nil or parent == nil or !isClass(child) or !isClass(parent)){
        throw IllegalArgumentError("isChildOf(class, class): expected classes in arguments.");
    }

    if(child == parent) return true;
    if(child.getSuper() != nil){
        return isChildOf(child.getSuper(), parent);
    }
    return false;
}

func isClass(clazz){
    return type(clazz)[1:5] == "class";
}

func isInstance(inst){
    return type(inst)[1:4] == "inst";
}

func getName(obj){
    if(type(obj)[1:5] == "class"){
        return type(obj)[8:type(obj).length()-3];
    }

    if(type(obj)[1:4] == "inst"){
        return type(obj)[7:type(obj).length()-3];
    }
}